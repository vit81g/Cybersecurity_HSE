Run started:2025-10-20 17:11:43.067875

Test results:
>> Issue: [B506:yaml_load] Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load().
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.6/plugins/b506_yaml_load.html
   Location: ./pygoat/introduction/lab_code/test.py:20:7
19	stream = open('/home/fox/test.yaml', 'r')
20	data = yaml.load(stream)
21	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html
   Location: ./pygoat/introduction/mitre.py:158:19
157	        username = request.POST.get('username')
158	        password = md5(password.encode()).hexdigest()
159	        User = CSRF_user_tbl.objects.filter(username=username, password=password)

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b307-eval
   Location: ./pygoat/introduction/mitre.py:215:17
214	        expression = request.POST.get('expression')
215	        result = eval(expression)
216	        return JsonResponse({'result': result})

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.6/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: ./pygoat/introduction/mitre.py:230:14
229	def command_out(command):
230	    process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
231	    return process.communicate()

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Call to requests without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.8.6/plugins/b113_request_without_timeout.html
   Location: ./pygoat/introduction/playground/A6/soln.py:8:19
7	        url = f"https://pypi.org/pypi/{k[0]}/{k[1]}/json"
8	        response = requests.get(url)
9	        response.raise_for_status()

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Call to requests without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.8.6/plugins/b113_request_without_timeout.html
   Location: ./pygoat/introduction/playground/A6/utility.py:8:19
7	        url = f"https://pypi.org/pypi/{k[0]}/{k[1]}/json"
8	        response = requests.get(url)
9	        response.raise_for_status()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.6/plugins/b608_hardcoded_sql_expressions.html
   Location: ./pygoat/introduction/views.py:108:28
107	
108	                sql_query = "SELECT * FROM introduction_login WHERE user='"+name+"'AND password='"+password+"'"
109	                print(sql_query)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b301-pickle
   Location: ./pygoat/introduction/views.py:164:20
163	            token = base64.b64decode(token)
164	            admin = pickle.loads(token)
165	            if admin.admin == 1:

--------------------------------------------------
>> Issue: [B317:blacklist] Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b313-b320-xml-bad-sax
   Location: ./pygoat/introduction/views.py:203:13
202	
203	    parser = make_parser()
204	    parser.setFeature(feature_external_ges, True)

--------------------------------------------------
>> Issue: [B319:blacklist] Using xml.dom.pulldom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b313-b320-xml-bad-pulldom
   Location: ./pygoat/introduction/views.py:205:10
204	    parser.setFeature(feature_external_ges, True)
205	    doc = parseString(request.body.decode('utf-8'), parser=parser)
206	    for event, node in doc:

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.6/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: ./pygoat/introduction/views.py:376:26
375	                    command,
376	                    shell=True,
377	                    stdout=subprocess.PIPE, 
378	                    stderr=subprocess.PIPE)
379	                stdout, stderr = process.communicate()
380	                data = stdout.decode('utf-8')
381	                stderr = stderr.decode('utf-8')

--------------------------------------------------
>> Issue: [B506:yaml_load] Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load().
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.6/plugins/b506_yaml_load.html
   Location: ./pygoat/introduction/views.py:485:27
484	                try :
485	                    data = yaml.load(file,yaml.Loader)
486	                    

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.6/plugins/b608_hardcoded_sql_expressions.html
   Location: ./pygoat/introduction/views.py:789:24
788	        if name:
789	            sql_query = "SELECT * FROM introduction_sql_lab_table WHERE id='"+name+"'AND password='"+password+"'"
790	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Call to requests without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.8.6/plugins/b113_request_without_timeout.html
   Location: ./pygoat/introduction/views.py:888:23
887	        try:
888	            response = requests.get(url)
889	            return render(request, "Lab/ssrf/ssrf_lab2.html", {"response": response.content.decode()})

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html
   Location: ./pygoat/introduction/views.py:951:27
950	            try:
951	                password = md5(password.encode()).hexdigest()
952	                user = CF_user.objects.get(username=username,password=password)

--------------------------------------------------

Code scanned:
	Total lines of code: 2329
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 27
		Medium: 11
		High: 4
	Total issues (by confidence):
		Undefined: 0
		Low: 5
		Medium: 13
		High: 24
Files skipped (0):
