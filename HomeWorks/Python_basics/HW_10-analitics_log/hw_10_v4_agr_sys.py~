"""
Подготовка:
 pip install pandas matplotlib seaborn
Этапы выполнения задания
Этап 1. Подготовка данных
 Скачайте файл с набором данных событий информационной безопасности в  формате JSON (events.json).
 Важно: можно сгенерировать данные самостоятельно или использовать предоставленные.
Этап 2. Анализ данных
 Загрузите данные из файла JSON в датафрейм с помощью Pandas и проанализируйте их. Вы должны изучить распределение событий
 информационной безопасности по их типам (по полю «signature»).
Этап 3. Визуализация данных
 Постройте график распределения типов событий информационной  безопасности. Используйте Seaborn или Matplotlib для создания визуализации
"""

import json
import sys # использую для простоты кода (один параметр, одно значение)
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Проверка наличия аргумента командной строки (1-й аргумент это файл JSON)
if len(sys.argv) < 2:
    print("Ошибка: укажите имя JSON-файла!")
    sys.exit(1)

# Получаем путь к файлу из аргументов командной строки (по умолчанию в том же каталоге)
file_path = sys.argv[1]

# Загрузка данных из JSON-файла, работа с файлом
with open(file_path, 'r') as file:
    data = json.load(file)

# Создание DataFrame
df = pd.DataFrame(data['events'])

# Преобразование timestamp в datetime
# Это позволяет удобнее работать с датами и выполнять сортировку или фильтрацию
df['timestamp'] = pd.to_datetime(df['timestamp'])

# Анализ данных: группировка по типу события
event_counts = df['signature'].value_counts()

# Визуализация распределения событий
# Устанавливает размер графика
plt.figure(figsize=(12, 8))
# Построение гистограммы. Строим столбчатый график
sns.barplot(y=event_counts.index, x=event_counts.values, palette='viridis')
# Установка названий осей. Подписываем ось X
plt.xlabel('Количество событий', fontsize=12)
# Установка названий осей. Подписываем ось Y
plt.ylabel('Тип события', fontsize=12)
# Установка названий графика. Заголовок графика
plt.title('Распределение событий информационной безопасности', fontsize=14)
# Установка размера шрифта
# Настраиваем размер шрифта оси X
plt.xticks(fontsize=10)
# Настраиваем размер шрифта оси Y
plt.yticks(fontsize=8)
# Установка размера легенды
plt.tight_layout()
# Отображение графика
plt.show()
